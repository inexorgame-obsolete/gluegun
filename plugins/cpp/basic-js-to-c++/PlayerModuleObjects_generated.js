// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var PlayerModule = PlayerModule || {};

/**
 * @const
 * @namespace
 */
var distributed_state = distributed_state || {};

/**
 * The list of all message object types in this module.
 *
 * @enum
 */
PlayerModule.Any = {
  NONE: 0, 0: 'NONE',
  PlayerBuffer: 1, 1: 'PlayerBuffer'
};

/**
 * A message containing the kind of a message.
 *
 * @enum
 */
PlayerModule.AnyMessageKind = {
  NONE: 0, 0: 'NONE',
  Change: 1, 1: 'Change',
  NewEntry: 2, 2: 'NewEntry',
  RemoveEntry: 3, 3: 'RemoveEntry'
};

/**
 * @constructor
 */
PlayerModule.Change = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {PlayerModule.Change}
 */
PlayerModule.Change.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {PlayerModule.Change=} obj
 * @returns {PlayerModule.Change}
 */
PlayerModule.Change.getRootAsChange = function(bb, obj) {
  return (obj || new PlayerModule.Change).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {PlayerModule.Any}
 */
PlayerModule.Change.prototype.changeSetType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {PlayerModule.Any} */ (this.bb.readUint8(this.bb_pos + offset)) : PlayerModule.Any.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
PlayerModule.Change.prototype.changeSet = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
PlayerModule.Change.startChange = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {PlayerModule.Any} changeSetType
 */
PlayerModule.Change.addChangeSetType = function(builder, changeSetType) {
  builder.addFieldInt8(0, changeSetType, PlayerModule.Any.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} changeSetOffset
 */
PlayerModule.Change.addChangeSet = function(builder, changeSetOffset) {
  builder.addFieldOffset(1, changeSetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
PlayerModule.Change.endChange = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
PlayerModule.NewEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {PlayerModule.NewEntry}
 */
PlayerModule.NewEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {PlayerModule.NewEntry=} obj
 * @returns {PlayerModule.NewEntry}
 */
PlayerModule.NewEntry.getRootAsNewEntry = function(bb, obj) {
  return (obj || new PlayerModule.NewEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {distributed_state.Address=} obj
 * @returns {distributed_state.Address|null}
 */
PlayerModule.NewEntry.prototype.entryAddress = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new distributed_state.Address).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {PlayerModule.Any}
 */
PlayerModule.NewEntry.prototype.initialStateType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {PlayerModule.Any} */ (this.bb.readUint8(this.bb_pos + offset)) : PlayerModule.Any.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
PlayerModule.NewEntry.prototype.initialState = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
PlayerModule.NewEntry.startNewEntry = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} entryAddressOffset
 */
PlayerModule.NewEntry.addEntryAddress = function(builder, entryAddressOffset) {
  builder.addFieldOffset(0, entryAddressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {PlayerModule.Any} initialStateType
 */
PlayerModule.NewEntry.addInitialStateType = function(builder, initialStateType) {
  builder.addFieldInt8(1, initialStateType, PlayerModule.Any.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} initialStateOffset
 */
PlayerModule.NewEntry.addInitialState = function(builder, initialStateOffset) {
  builder.addFieldOffset(2, initialStateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
PlayerModule.NewEntry.endNewEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
PlayerModule.RemoveEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {PlayerModule.RemoveEntry}
 */
PlayerModule.RemoveEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {PlayerModule.RemoveEntry=} obj
 * @returns {PlayerModule.RemoveEntry}
 */
PlayerModule.RemoveEntry.getRootAsRemoveEntry = function(bb, obj) {
  return (obj || new PlayerModule.RemoveEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
PlayerModule.RemoveEntry.startRemoveEntry = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
PlayerModule.RemoveEntry.endRemoveEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
PlayerModule.OneMessage = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {PlayerModule.OneMessage}
 */
PlayerModule.OneMessage.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {PlayerModule.OneMessage=} obj
 * @returns {PlayerModule.OneMessage}
 */
PlayerModule.OneMessage.getRootAsOneMessage = function(bb, obj) {
  return (obj || new PlayerModule.OneMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {PlayerModule.AnyMessageKind}
 */
PlayerModule.OneMessage.prototype.moduleInfoType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {PlayerModule.AnyMessageKind} */ (this.bb.readUint8(this.bb_pos + offset)) : PlayerModule.AnyMessageKind.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
PlayerModule.OneMessage.prototype.moduleInfo = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
PlayerModule.OneMessage.startOneMessage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {PlayerModule.AnyMessageKind} moduleInfoType
 */
PlayerModule.OneMessage.addModuleInfoType = function(builder, moduleInfoType) {
  builder.addFieldInt8(0, moduleInfoType, PlayerModule.AnyMessageKind.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} moduleInfoOffset
 */
PlayerModule.OneMessage.addModuleInfo = function(builder, moduleInfoOffset) {
  builder.addFieldOffset(1, moduleInfoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
PlayerModule.OneMessage.endOneMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
PlayerModule.OneMessage.finishOneMessageBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for ECMAScript6 Modules
export {PlayerModule};
export {distributed_state};
